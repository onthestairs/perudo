
==================== FINAL INTERFACE ====================
2017-06-02 21:39:50.986975 UTC

interface perudo-0.1.0.0-HYB7kc5HV0jJRPlvbPRvgE:Perudo.Types 8002
  interface hash: e80dbfe42dcc56177ad3e634096374fe
  ABI hash: 7fdb9393f6d458f72ffeff5b9c8ce829
  export-list hash: 0ab147ce78318b98cf63319fc39df59e
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 026607d1874685606a144228d1796a66
  sig of: Nothing
  used TH splices: False
  where
exports:
  Perudo.Types.Action
  Perudo.Types.Dice
  Perudo.Types.DiceBet
  Perudo.Types.Hand
  Perudo.Types.InRoundPlayer
  Perudo.Types.NumberOfDice
  Perudo.Types.PalaficoState
  Perudo.Types.PerudoResult
  Perudo.Types.PerudoStrategy
  Perudo.Types.Player
  Perudo.Types.RoundPosition
module dependencies:
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0*
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1 random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog*
                      time-1.6.0.1@time-1.6.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Enum 3811281f7b5f26da514529cf3ed44009
import  -/  base-4.9.1.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog:System.Random cc3ef358c669b194cf9fe94db6f2430f
743018a7f29a128d6381e5f2779688a5
  $fBoundedDice :: GHC.Enum.Bounded Perudo.Types.Dice
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Perudo.Types.Dice Perudo.Types.One Perudo.Types.Six -}
743018a7f29a128d6381e5f2779688a5
  $fEnumDice :: GHC.Enum.Enum Perudo.Types.Dice
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Perudo.Types.Dice
                  Perudo.Types.$fEnumDice_$csucc
                  Perudo.Types.$fEnumDice_$cpred
                  Perudo.Types.$fEnumDice_$ctoEnum
                  Perudo.Types.$fEnumDice_$cfromEnum
                  Perudo.Types.$fEnumDice_$cenumFrom
                  Perudo.Types.$fEnumDice_$cenumFromThen
                  Perudo.Types.$fEnumDice_$cenumFromTo
                  Perudo.Types.$fEnumDice_$cenumFromThenTo -}
743018a7f29a128d6381e5f2779688a5
  $fEnumDice1 :: [Perudo.Types.Dice]
  {- Unfolding: (Perudo.Types.$fEnumDice_go6 5#) -}
743018a7f29a128d6381e5f2779688a5
  $fEnumDice2 :: [Perudo.Types.Dice]
  {- Unfolding: (Perudo.Types.$fEnumDice_go7 4#) -}
743018a7f29a128d6381e5f2779688a5
  $fEnumDice3 :: [Perudo.Types.Dice]
  {- Unfolding: (Perudo.Types.$fEnumDice_go8 3#) -}
743018a7f29a128d6381e5f2779688a5
  $fEnumDice4 :: [Perudo.Types.Dice]
  {- Unfolding: (Perudo.Types.$fEnumDice_go9 2#) -}
743018a7f29a128d6381e5f2779688a5
  $fEnumDice5 :: [Perudo.Types.Dice]
  {- Unfolding: (Perudo.Types.$fEnumDice_go10 1#) -}
743018a7f29a128d6381e5f2779688a5
  $fEnumDice6 :: [Perudo.Types.Dice]
  {- Unfolding: (Perudo.Types.$fEnumDice_go11 0#) -}
743018a7f29a128d6381e5f2779688a5
  $fEnumDice7 :: GHC.Prim.Int# -> Perudo.Types.Dice
  {- Arity: 1, Strictness: <L,U>x -}
743018a7f29a128d6381e5f2779688a5
  $fEnumDice8 :: Perudo.Types.Dice
  {- Strictness: x -}
743018a7f29a128d6381e5f2779688a5
  $fEnumDice9 :: Perudo.Types.Dice
  {- Strictness: x -}
743018a7f29a128d6381e5f2779688a5
  $fEnumDice_$cenumFrom :: Perudo.Types.Dice -> [Perudo.Types.Dice]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (a :: Perudo.Types.Dice) ->
                 case a of wild {
                   Perudo.Types.One -> Perudo.Types.$fEnumDice6
                   Perudo.Types.Two -> Perudo.Types.$fEnumDice5
                   Perudo.Types.Three -> Perudo.Types.$fEnumDice4
                   Perudo.Types.Four -> Perudo.Types.$fEnumDice3
                   Perudo.Types.Five -> Perudo.Types.$fEnumDice2
                   Perudo.Types.Six -> Perudo.Types.$fEnumDice1 }) -}
743018a7f29a128d6381e5f2779688a5
  $fEnumDice_$cenumFromThen ::
    Perudo.Types.Dice -> Perudo.Types.Dice -> [Perudo.Types.Dice]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Perudo.Types.Dice) (b :: Perudo.Types.Dice) ->
                 let {
                   $j :: GHC.Prim.Int# -> [Perudo.Types.Dice]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (a# :: GHC.Prim.Int#)[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [Perudo.Types.Dice]
                         {- Arity: 1, Strictness: <S,U> -}
                       = \ (b# :: GHC.Prim.Int#)[OneShot] ->
                         let {
                           $j2 :: GHC.Prim.Int# -> [Perudo.Types.Dice]
                             {- Arity: 1, Strictness: <S,U> -}
                           = \ (y :: GHC.Prim.Int#)[OneShot] ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# b# a#) of wild {
                               GHC.Types.False
                               -> GHC.Enum.efdtIntDnFB
                                    @ [Perudo.Types.Dice]
                                    Perudo.Types.$fEnumDice_c
                                    (GHC.Types.[] @ Perudo.Types.Dice)
                                    a#
                                    b#
                                    y
                               GHC.Types.True
                               -> GHC.Enum.efdtIntUpFB
                                    @ [Perudo.Types.Dice]
                                    Perudo.Types.$fEnumDice_c
                                    (GHC.Types.[] @ Perudo.Types.Dice)
                                    a#
                                    b#
                                    y }
                         } in
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.># a# b#) of wild {
                           GHC.Types.False -> $j2 5# GHC.Types.True -> $j2 0# }
                     } in
                     case b of wild {
                       Perudo.Types.One -> $j1 0#
                       Perudo.Types.Two -> $j1 1#
                       Perudo.Types.Three -> $j1 2#
                       Perudo.Types.Four -> $j1 3#
                       Perudo.Types.Five -> $j1 4#
                       Perudo.Types.Six -> $j1 5# }
                 } in
                 case a of wild {
                   Perudo.Types.One -> $j 0#
                   Perudo.Types.Two -> $j 1#
                   Perudo.Types.Three -> $j 2#
                   Perudo.Types.Four -> $j 3#
                   Perudo.Types.Five -> $j 4#
                   Perudo.Types.Six -> $j 5# }) -}
743018a7f29a128d6381e5f2779688a5
  $fEnumDice_$cenumFromThenTo ::
    Perudo.Types.Dice
    -> Perudo.Types.Dice -> Perudo.Types.Dice -> [Perudo.Types.Dice]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U> -}
743018a7f29a128d6381e5f2779688a5
  $fEnumDice_$cenumFromTo ::
    Perudo.Types.Dice -> Perudo.Types.Dice -> [Perudo.Types.Dice]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: Perudo.Types.Dice) (y :: Perudo.Types.Dice) ->
                 let {
                   $j :: GHC.Prim.Int# -> [Perudo.Types.Dice]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x1 :: GHC.Prim.Int#)[OneShot] ->
                     case y of wild {
                       Perudo.Types.One
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 0#) of wild1 {
                            GHC.Types.False -> Perudo.Types.$fEnumDice_go5 x1
                            GHC.Types.True -> GHC.Types.[] @ Perudo.Types.Dice }
                       Perudo.Types.Two
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 1#) of wild1 {
                            GHC.Types.False -> Perudo.Types.$fEnumDice_go4 x1
                            GHC.Types.True -> GHC.Types.[] @ Perudo.Types.Dice }
                       Perudo.Types.Three
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 2#) of wild1 {
                            GHC.Types.False -> Perudo.Types.$fEnumDice_go3 x1
                            GHC.Types.True -> GHC.Types.[] @ Perudo.Types.Dice }
                       Perudo.Types.Four
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 3#) of wild1 {
                            GHC.Types.False -> Perudo.Types.$fEnumDice_go2 x1
                            GHC.Types.True -> GHC.Types.[] @ Perudo.Types.Dice }
                       Perudo.Types.Five
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 4#) of wild1 {
                            GHC.Types.False -> Perudo.Types.$fEnumDice_go1 x1
                            GHC.Types.True -> GHC.Types.[] @ Perudo.Types.Dice }
                       Perudo.Types.Six
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 5#) of wild1 {
                            GHC.Types.False -> Perudo.Types.$fEnumDice_go x1
                            GHC.Types.True -> GHC.Types.[] @ Perudo.Types.Dice } }
                 } in
                 case x of wild {
                   Perudo.Types.One -> $j 0#
                   Perudo.Types.Two -> $j 1#
                   Perudo.Types.Three -> $j 2#
                   Perudo.Types.Four -> $j 3#
                   Perudo.Types.Five -> $j 4#
                   Perudo.Types.Six -> $j 5# }) -}
743018a7f29a128d6381e5f2779688a5
  $fEnumDice_$cfromEnum :: Perudo.Types.Dice -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Perudo.Types.Dice) ->
                 case w of wild {
                   Perudo.Types.One -> GHC.Types.I# 0#
                   Perudo.Types.Two -> GHC.Types.I# 1#
                   Perudo.Types.Three -> GHC.Types.I# 2#
                   Perudo.Types.Four -> GHC.Types.I# 3#
                   Perudo.Types.Five -> GHC.Types.I# 4#
                   Perudo.Types.Six -> GHC.Types.I# 5# }) -}
743018a7f29a128d6381e5f2779688a5
  $fEnumDice_$cpred :: Perudo.Types.Dice -> Perudo.Types.Dice
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Perudo.Types.Dice) ->
                 case a of wild {
                   Perudo.Types.One -> Perudo.Types.$fEnumDice8
                   Perudo.Types.Two -> Perudo.Types.One
                   Perudo.Types.Three -> Perudo.Types.Two
                   Perudo.Types.Four -> Perudo.Types.Three
                   Perudo.Types.Five -> Perudo.Types.Four
                   Perudo.Types.Six -> Perudo.Types.Five }) -}
743018a7f29a128d6381e5f2779688a5
  $fEnumDice_$csucc :: Perudo.Types.Dice -> Perudo.Types.Dice
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Perudo.Types.Dice) ->
                 case a of wild {
                   Perudo.Types.One -> Perudo.Types.Two
                   Perudo.Types.Two -> Perudo.Types.Three
                   Perudo.Types.Three -> Perudo.Types.Four
                   Perudo.Types.Four -> Perudo.Types.Five
                   Perudo.Types.Five -> Perudo.Types.Six
                   Perudo.Types.Six -> Perudo.Types.$fEnumDice9 }) -}
743018a7f29a128d6381e5f2779688a5
  $fEnumDice_$ctoEnum :: GHC.Types.Int -> Perudo.Types.Dice
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Perudo.Types.$w$ctoEnum ww1 }) -}
743018a7f29a128d6381e5f2779688a5
  $fEnumDice_c ::
    GHC.Types.Int -> [Perudo.Types.Dice] -> [Perudo.Types.Dice]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (ys :: [Perudo.Types.Dice]) ->
                 GHC.Types.:
                   @ Perudo.Types.Dice
                   (case x of wild { GHC.Types.I# a ->
                    GHC.Prim.tagToEnum# @ Perudo.Types.Dice a })
                   ys) -}
743018a7f29a128d6381e5f2779688a5
  $fEnumDice_go :: GHC.Prim.Int# -> [Perudo.Types.Dice]
  {- Arity: 1, Strictness: <L,U> -}
743018a7f29a128d6381e5f2779688a5
  $fEnumDice_go1 :: GHC.Prim.Int# -> [Perudo.Types.Dice]
  {- Arity: 1, Strictness: <L,U> -}
743018a7f29a128d6381e5f2779688a5
  $fEnumDice_go10 :: GHC.Prim.Int# -> [Perudo.Types.Dice]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
743018a7f29a128d6381e5f2779688a5
  $fEnumDice_go11 :: GHC.Prim.Int# -> [Perudo.Types.Dice]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
743018a7f29a128d6381e5f2779688a5
  $fEnumDice_go2 :: GHC.Prim.Int# -> [Perudo.Types.Dice]
  {- Arity: 1, Strictness: <L,U> -}
743018a7f29a128d6381e5f2779688a5
  $fEnumDice_go3 :: GHC.Prim.Int# -> [Perudo.Types.Dice]
  {- Arity: 1, Strictness: <L,U> -}
743018a7f29a128d6381e5f2779688a5
  $fEnumDice_go4 :: GHC.Prim.Int# -> [Perudo.Types.Dice]
  {- Arity: 1, Strictness: <L,U> -}
743018a7f29a128d6381e5f2779688a5
  $fEnumDice_go5 :: GHC.Prim.Int# -> [Perudo.Types.Dice]
  {- Arity: 1, Strictness: <L,U> -}
743018a7f29a128d6381e5f2779688a5
  $fEnumDice_go6 :: GHC.Prim.Int# -> [Perudo.Types.Dice]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
743018a7f29a128d6381e5f2779688a5
  $fEnumDice_go7 :: GHC.Prim.Int# -> [Perudo.Types.Dice]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
743018a7f29a128d6381e5f2779688a5
  $fEnumDice_go8 :: GHC.Prim.Int# -> [Perudo.Types.Dice]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
743018a7f29a128d6381e5f2779688a5
  $fEnumDice_go9 :: GHC.Prim.Int# -> [Perudo.Types.Dice]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
a27a9b301ae87e90a650314a0d086d2a
  $fEqAction :: GHC.Classes.Eq Perudo.Types.Action
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Perudo.Types.Action
                  Perudo.Types.$fEqAction_$c==
                  Perudo.Types.$fEqAction_$c/= -}
a27a9b301ae87e90a650314a0d086d2a
  $fEqAction_$c/= ::
    Perudo.Types.Action -> Perudo.Types.Action -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Perudo.Types.Action)
                   (b :: Perudo.Types.Action) ->
                 case a of wild {
                   Perudo.Types.Call
                   -> case b of wild1 {
                        Perudo.Types.Call -> GHC.Types.False
                        Perudo.Types.Bet ipv -> GHC.Types.True }
                   Perudo.Types.Bet a1
                   -> case b of wild1 {
                        Perudo.Types.Call -> GHC.Types.True
                        Perudo.Types.Bet b1
                        -> case a1 of ww { (,) ww1 ww2 ->
                           case b1 of ww3 { (,) ww4 ww5 ->
                           case ww1 of wild2 { GHC.Types.I# x ->
                           case ww4 of wild3 { GHC.Types.I# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# x y) of wild4 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True
                             -> case ww2 of wild5 {
                                  Perudo.Types.One
                                  -> case ww5 of wild6 {
                                       DEFAULT -> GHC.Types.True
                                       Perudo.Types.One -> GHC.Types.False }
                                  Perudo.Types.Two
                                  -> case ww5 of wild6 {
                                       DEFAULT -> GHC.Types.True
                                       Perudo.Types.Two -> GHC.Types.False }
                                  Perudo.Types.Three
                                  -> case ww5 of wild6 {
                                       DEFAULT -> GHC.Types.True
                                       Perudo.Types.Three -> GHC.Types.False }
                                  Perudo.Types.Four
                                  -> case ww5 of wild6 {
                                       DEFAULT -> GHC.Types.True
                                       Perudo.Types.Four -> GHC.Types.False }
                                  Perudo.Types.Five
                                  -> case ww5 of wild6 {
                                       DEFAULT -> GHC.Types.True
                                       Perudo.Types.Five -> GHC.Types.False }
                                  Perudo.Types.Six
                                  -> case ww5 of wild6 {
                                       DEFAULT -> GHC.Types.True
                                       Perudo.Types.Six -> GHC.Types.False } } } } } } } } }) -}
a27a9b301ae87e90a650314a0d086d2a
  $fEqAction_$c== ::
    Perudo.Types.Action -> Perudo.Types.Action -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Perudo.Types.Action)
                   (ds1 :: Perudo.Types.Action) ->
                 case ds of wild {
                   Perudo.Types.Call
                   -> case ds1 of wild1 {
                        Perudo.Types.Call -> GHC.Types.True
                        Perudo.Types.Bet ipv -> GHC.Types.False }
                   Perudo.Types.Bet a1
                   -> case ds1 of wild1 {
                        Perudo.Types.Call -> GHC.Types.False
                        Perudo.Types.Bet b1
                        -> case a1 of ww { (,) ww1 ww2 ->
                           case b1 of ww3 { (,) ww4 ww5 ->
                           case ww1 of wild2 { GHC.Types.I# x ->
                           case ww4 of wild3 { GHC.Types.I# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# x y) of wild4 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> Perudo.Types.$fEqAction_$c==1 ww2 ww5 } } } } } } }) -}
743018a7f29a128d6381e5f2779688a5
  $fEqAction_$c==1 ::
    Perudo.Types.Dice -> Perudo.Types.Dice -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Perudo.Types.Dice)
                   (ds1 :: Perudo.Types.Dice) ->
                 case ds of wild {
                   Perudo.Types.One
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Perudo.Types.One -> GHC.Types.True }
                   Perudo.Types.Two
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Perudo.Types.Two -> GHC.Types.True }
                   Perudo.Types.Three
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Perudo.Types.Three -> GHC.Types.True }
                   Perudo.Types.Four
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Perudo.Types.Four -> GHC.Types.True }
                   Perudo.Types.Five
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Perudo.Types.Five -> GHC.Types.True }
                   Perudo.Types.Six
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Perudo.Types.Six -> GHC.Types.True } }) -}
743018a7f29a128d6381e5f2779688a5
  $fEqDice :: GHC.Classes.Eq Perudo.Types.Dice
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Perudo.Types.Dice
                  Perudo.Types.$fEqAction_$c==1
                  Perudo.Types.$fEqDice_$c/= -}
743018a7f29a128d6381e5f2779688a5
  $fEqDice_$c/= ::
    Perudo.Types.Dice -> Perudo.Types.Dice -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Perudo.Types.Dice) (b :: Perudo.Types.Dice) ->
                 case a of wild {
                   Perudo.Types.One
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Perudo.Types.One -> GHC.Types.False }
                   Perudo.Types.Two
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Perudo.Types.Two -> GHC.Types.False }
                   Perudo.Types.Three
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Perudo.Types.Three -> GHC.Types.False }
                   Perudo.Types.Four
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Perudo.Types.Four -> GHC.Types.False }
                   Perudo.Types.Five
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Perudo.Types.Five -> GHC.Types.False }
                   Perudo.Types.Six
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Perudo.Types.Six -> GHC.Types.False } }) -}
0a96f82d69bab9b542720246816b866c
  $fEqPalaficoState :: GHC.Classes.Eq Perudo.Types.PalaficoState
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Perudo.Types.PalaficoState
                  Perudo.Types.$fEqPalaficoState_$c==
                  Perudo.Types.$fEqPalaficoState_$c/= -}
0a96f82d69bab9b542720246816b866c
  $fEqPalaficoState_$c/= ::
    Perudo.Types.PalaficoState
    -> Perudo.Types.PalaficoState -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Perudo.Types.PalaficoState)
                   (b :: Perudo.Types.PalaficoState) ->
                 case a of wild {
                   Perudo.Types.PalificoDone
                   -> case b of wild1 {
                        Perudo.Types.PalificoDone -> GHC.Types.False
                        Perudo.Types.PalificoPending -> GHC.Types.True }
                   Perudo.Types.PalificoPending
                   -> case b of wild1 {
                        Perudo.Types.PalificoDone -> GHC.Types.True
                        Perudo.Types.PalificoPending -> GHC.Types.False } }) -}
0a96f82d69bab9b542720246816b866c
  $fEqPalaficoState_$c== ::
    Perudo.Types.PalaficoState
    -> Perudo.Types.PalaficoState -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Perudo.Types.PalaficoState)
                   (ds1 :: Perudo.Types.PalaficoState) ->
                 case ds of wild {
                   Perudo.Types.PalificoDone
                   -> case ds1 of wild1 {
                        Perudo.Types.PalificoDone -> GHC.Types.True
                        Perudo.Types.PalificoPending -> GHC.Types.False }
                   Perudo.Types.PalificoPending
                   -> case ds1 of wild1 {
                        Perudo.Types.PalificoDone -> GHC.Types.False
                        Perudo.Types.PalificoPending -> GHC.Types.True } }) -}
743018a7f29a128d6381e5f2779688a5
  $fRandomDice :: System.Random.Random Perudo.Types.Dice
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Perudo.Types.Dice
                  Perudo.Types.$fRandomDice_$crandomR
                  Perudo.Types.$fRandomDice_$crandom
                  Perudo.Types.$fRandomDice_$crandomRs
                  Perudo.Types.$fRandomDice_$crandoms
                  Perudo.Types.$fRandomDice_$crandomRIO
                  Perudo.Types.$fRandomDice_$crandomIO -}
743018a7f29a128d6381e5f2779688a5
  $fRandomDice1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Perudo.Types.Dice #)
  {- Arity: 1, Strictness: <S,U>m,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case System.Random.theStdGen
                        `cast`
                      (GHC.IORef.N:IORef[0] <System.Random.StdGen>_N) of wild { GHC.STRef.STRef r# ->
                 case GHC.Prim.atomicModifyMutVar#
                        @ GHC.Prim.RealWorld
                        @ System.Random.StdGen
                        @ (System.Random.StdGen, Perudo.Types.Dice)
                        @ Perudo.Types.Dice
                        r#
                        Perudo.Types.$fRandomDice2
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of b1 { DEFAULT -> ds1 } } }) -}
743018a7f29a128d6381e5f2779688a5
  $fRandomDice2 ::
    System.Random.StdGen -> (System.Random.StdGen, Perudo.Types.Dice)
  {- Arity: 1,
     Unfolding: (\ (a1 :: System.Random.StdGen) ->
                 case System.Random.$wrandomIvalInteger
                        @ System.Random.StdGen
                        @ GHC.Types.Int
                        System.Random.$fRandomGenStdGen
                        GHC.Num.$fNumInt
                        Perudo.Types.$fRandomDice4
                        Perudo.Types.$fRandomDice3
                        a1 of ww2 { (#,#) ww3 ww4 ->
                 case ww4 of a'1 { System.Random.StdGen ipv ipv1 ->
                 (a'1, Perudo.Types.$fEnumDice_$ctoEnum ww3) } }) -}
5032b0a4df2d1dca2508ff8d743dc937
  $fRandomDice3 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (5) -}
8265098922f6fc885365cb5c22c660a9
  $fRandomDice4 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
743018a7f29a128d6381e5f2779688a5
  $fRandomDice5 ::
    (Perudo.Types.Dice, Perudo.Types.Dice)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Perudo.Types.Dice #)
  {- Arity: 2, Strictness: <L,U(U,U)><S,U>m -}
743018a7f29a128d6381e5f2779688a5
  $fRandomDice6 :: (Perudo.Types.Dice, Perudo.Types.Dice)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Perudo.Types.One, Perudo.Types.Six)) -}
743018a7f29a128d6381e5f2779688a5
  $fRandomDice_$crandom ::
    System.Random.RandomGen g => g -> (Perudo.Types.Dice, g)
  {- Arity: 2, Strictness: <L,U(C(U(1*U(U),U)),C(U(U,U)),A)><L,U>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ g ($dRandomGen :: System.Random.RandomGen g) (eta :: g) ->
                 Perudo.Types.$fRandomDice_$crandomR
                   @ g
                   $dRandomGen
                   Perudo.Types.$fRandomDice6
                   eta) -}
743018a7f29a128d6381e5f2779688a5
  $fRandomDice_$crandomIO :: GHC.Types.IO Perudo.Types.Dice
  {- Arity: 1, Strictness: <S,U>m,
     Unfolding: InlineRule (0, True, True)
                Perudo.Types.$fRandomDice1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <Perudo.Types.Dice>_R)) -}
743018a7f29a128d6381e5f2779688a5
  $fRandomDice_$crandomR ::
    System.Random.RandomGen g =>
    (Perudo.Types.Dice, Perudo.Types.Dice)
    -> g -> (Perudo.Types.Dice, g)
  {- Arity: 3,
     Strictness: <L,U(C(U(1*U(U),U)),C(U(U,U)),A)><S(SS),1*U(1*U,1*U)><L,U>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ g
                   (w :: System.Random.RandomGen g)
                   (w1 :: (Perudo.Types.Dice, Perudo.Types.Dice))
                   (w2 :: g) ->
                 case w1 of ww { (,) ww1 ww2 ->
                 case Perudo.Types.$w$crandomR
                        @ g
                        w
                        ww1
                        ww2
                        w2 of ww3 { (#,#) ww4 ww5 ->
                 (ww4, ww5) } }) -}
743018a7f29a128d6381e5f2779688a5
  $fRandomDice_$crandomRIO ::
    (Perudo.Types.Dice, Perudo.Types.Dice)
    -> GHC.Types.IO Perudo.Types.Dice
  {- Arity: 2, Strictness: <L,U(U,U)><S,U>m,
     Unfolding: InlineRule (0, True, True)
                Perudo.Types.$fRandomDice5
                  `cast`
                (<(Perudo.Types.Dice, Perudo.Types.Dice)>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Perudo.Types.Dice>_R)) -}
743018a7f29a128d6381e5f2779688a5
  $fRandomDice_$crandomRs ::
    System.Random.RandomGen g =>
    (Perudo.Types.Dice, Perudo.Types.Dice) -> g -> [Perudo.Types.Dice]
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ g
                   ($dRandomGen :: System.Random.RandomGen g)
                   (ival :: (Perudo.Types.Dice, Perudo.Types.Dice))
                   (g1 :: g) ->
                 GHC.Base.build
                   @ Perudo.Types.Dice
                   (\ @ b1
                      (cons :: Perudo.Types.Dice -> b1 -> b1)[OneShot]
                      (_nil :: b1)[OneShot] ->
                    letrec {
                      go6 :: g -> b1 {- Arity: 1 -}
                      = \ (g2 :: g) ->
                        case Perudo.Types.$fRandomDice_$crandomR
                               @ g
                               $dRandomGen
                               ival
                               g2 of wild { (,) x g' ->
                        case x of x1 { DEFAULT -> cons x1 (go6 g') } }
                    } in
                    go6 g1)) -}
743018a7f29a128d6381e5f2779688a5
  $fRandomDice_$crandoms ::
    System.Random.RandomGen g => g -> [Perudo.Types.Dice]
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ g ($dRandomGen :: System.Random.RandomGen g) (g1 :: g) ->
                 GHC.Base.build
                   @ Perudo.Types.Dice
                   (\ @ b1
                      (cons :: Perudo.Types.Dice -> b1 -> b1)[OneShot]
                      (_nil :: b1)[OneShot] ->
                    letrec {
                      go6 :: g -> b1 {- Arity: 1 -}
                      = \ (g2 :: g) ->
                        case Perudo.Types.$fRandomDice_$crandom
                               @ g
                               $dRandomGen
                               g2 of wild { (,) x g' ->
                        case x of x1 { DEFAULT -> cons x1 (go6 g') } }
                    } in
                    go6 g1)) -}
a27a9b301ae87e90a650314a0d086d2a
  $fShowAction :: GHC.Show.Show Perudo.Types.Action
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Perudo.Types.Action
                  Perudo.Types.$fShowAction_$cshowsPrec
                  Perudo.Types.$fShowAction_$cshow
                  Perudo.Types.$fShowAction_$cshowList -}
a27a9b301ae87e90a650314a0d086d2a
  $fShowAction1 :: Perudo.Types.Action -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (Perudo.Types.$fShowAction_$cshowsPrec
                   Perudo.Types.$fShowAction2) -}
47af654eab51f3fb9c6af74b8d956380
  $fShowAction10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Call"#) -}
7979880bceee0815c4d7bfc5779d34f0
  $fShowAction11 :: [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows4
                   (GHC.Types.[] @ GHC.Types.Char)) -}
1afcc3c82a5845b6855e8b520e4d6c4d
  $fShowAction2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
b83d6e86ab45fbab2f9d2c4d4f4c0910
  $fShowAction3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Six"#) -}
d811cad6ad549d6b5aba2eb098363e81
  $fShowAction4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Five"#) -}
f5c2b000e00a93fb61d40716bc3d524e
  $fShowAction5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Four"#) -}
1f71545d289bebe27727b4616b28cf2d
  $fShowAction6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Three"#) -}
b34b86700e49958f014cf0c75330ce5d
  $fShowAction7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Two"#) -}
1b054ca0cd5e10755a88f61d45cf07a6
  $fShowAction8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "One"#) -}
3ff26b5fa0056e164069c270b53b04bb
  $fShowAction9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Bet "#) -}
a27a9b301ae87e90a650314a0d086d2a
  $fShowAction_$cshow :: Perudo.Types.Action -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Perudo.Types.Action) ->
                 case x of wild {
                   Perudo.Types.Call -> Perudo.Types.$fShowAction10
                   Perudo.Types.Bet b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Perudo.Types.$fShowAction9
                        (case b1 of ww { (,) ww1 ww2 ->
                         GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.shows7
                           (case ww1 of ww4 { GHC.Types.I# ww3 ->
                            case GHC.Show.$wshowSignedInt
                                   0#
                                   ww3
                                   (GHC.Types.:
                                      @ GHC.Types.Char
                                      GHC.Show.shows5
                                      (GHC.Show.$fShow(,)_$sgo
                                         Perudo.Types.$fShowAction11
                                         (\ (w :: GHC.Base.String) ->
                                          Perudo.Types.$w$cshowsPrec ww2 w)
                                         (GHC.Types.[] @ GHC.Show.ShowS))) of ww5 { (#,#) ww6 ww7 ->
                            GHC.Types.: @ GHC.Types.Char ww6 ww7 } }) }) }) -}
a27a9b301ae87e90a650314a0d086d2a
  $fShowAction_$cshowList :: [Perudo.Types.Action] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Perudo.Types.Action
                   Perudo.Types.$fShowAction1) -}
a27a9b301ae87e90a650314a0d086d2a
  $fShowAction_$cshowsPrec ::
    GHC.Types.Int -> Perudo.Types.Action -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ (ds :: GHC.Types.Int)
                   (ds1 :: Perudo.Types.Action)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild {
                   Perudo.Types.Call
                   -> GHC.Base.++ @ GHC.Types.Char Perudo.Types.$fShowAction10 eta
                   Perudo.Types.Bet b1
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ (x1 :: GHC.Base.String)[OneShot] ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            Perudo.Types.$fShowAction9
                            (case b1 of ww { (,) ww1 ww2 ->
                             GHC.Types.:
                               @ GHC.Types.Char
                               GHC.Show.shows7
                               (case ww1 of ww4 { GHC.Types.I# ww3 ->
                                case GHC.Show.$wshowSignedInt
                                       0#
                                       ww3
                                       (GHC.Types.:
                                          @ GHC.Types.Char
                                          GHC.Show.shows5
                                          (GHC.Show.$fShow(,)_$sgo
                                             (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x1)
                                             (\ (w :: GHC.Base.String) ->
                                              Perudo.Types.$w$cshowsPrec ww2 w)
                                             (GHC.Types.[]
                                                @ GHC.Show.ShowS))) of ww5 { (#,#) ww6 ww7 ->
                                GHC.Types.: @ GHC.Types.Char ww6 ww7 } }) })
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False -> p eta
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 eta)) } } }) -}
743018a7f29a128d6381e5f2779688a5
  $fShowDice :: GHC.Show.Show Perudo.Types.Dice
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Perudo.Types.Dice
                  Perudo.Types.$fShowDice_$cshowsPrec
                  Perudo.Types.$fShowDice_$cshow
                  Perudo.Types.$fShowDice_$cshowList -}
743018a7f29a128d6381e5f2779688a5
  $fShowDice_$cshow :: Perudo.Types.Dice -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Perudo.Types.Dice) ->
                 Perudo.Types.$fShowDice_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
743018a7f29a128d6381e5f2779688a5
  $fShowDice_$cshowList :: [Perudo.Types.Dice] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Perudo.Types.Dice
                   Perudo.Types.$w$cshowsPrec) -}
743018a7f29a128d6381e5f2779688a5
  $fShowDice_$cshowsPrec ::
    GHC.Types.Int -> Perudo.Types.Dice -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Perudo.Types.Dice)
                   (w2 :: GHC.Base.String) ->
                 Perudo.Types.$w$cshowsPrec w1 w2) -}
18683ae0c86846b26dc299373077d50a
  $fShowInRoundPlayer :: GHC.Show.Show Perudo.Types.InRoundPlayer
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Perudo.Types.InRoundPlayer
                  Perudo.Types.$fShowInRoundPlayer_$cshowsPrec
                  Perudo.Types.$fShowInRoundPlayer_$cshow
                  Perudo.Types.$fShowInRoundPlayer_$cshowList -}
18683ae0c86846b26dc299373077d50a
  $fShowInRoundPlayer1 ::
    Perudo.Types.InRoundPlayer -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Perudo.Types.InRoundPlayer)
                   (w1 :: GHC.Base.String) ->
                 case w of ww { Perudo.Types.InRoundPlayer ww1 ww2 ww3 ->
                 Perudo.Types.$w$cshowsPrec1 0# ww1 ww2 ww3 w1 }) -}
6385d56565415bc96f271b1acb38aff7
  $fShowInRoundPlayer2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
86fd66b28547eaee0bc9c788e6bd3640
  $fShowInRoundPlayer3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "roundPosition = "#) -}
5553242d59240fa77372357baa57f348
  $fShowInRoundPlayer4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "hand = "#) -}
087800ad6e77bad332ac701af06a3592
  $fShowInRoundPlayer5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
aed5285db402012923d0b0c4081ee1ba
  $fShowInRoundPlayer6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PalificoPending"#) -}
102457819d81c5db334e45cd86cf679a
  $fShowInRoundPlayer7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PalificoDone"#) -}
3387e819ed5aae7746df414456e29497
  $fShowInRoundPlayer8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "player = "#) -}
8c0b7296d80ca0afe604b4483bc1dab9
  $fShowInRoundPlayer9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "InRoundPlayer {"#) -}
18683ae0c86846b26dc299373077d50a
  $fShowInRoundPlayer_$cshow ::
    Perudo.Types.InRoundPlayer -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(A,1*U(U),1*U),1*U,1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Perudo.Types.InRoundPlayer) ->
                 Perudo.Types.$fShowInRoundPlayer_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
18683ae0c86846b26dc299373077d50a
  $fShowInRoundPlayer_$cshowList ::
    [Perudo.Types.InRoundPlayer] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Perudo.Types.InRoundPlayer
                   Perudo.Types.$fShowInRoundPlayer1) -}
18683ae0c86846b26dc299373077d50a
  $fShowInRoundPlayer_$cshowsPrec ::
    GHC.Types.Int -> Perudo.Types.InRoundPlayer -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(A,1*U(U),1*U),1*U,1*U(U))><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Perudo.Types.InRoundPlayer)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Perudo.Types.InRoundPlayer ww3 ww4 ww5 ->
                 Perudo.Types.$w$cshowsPrec1 ww1 ww3 ww4 ww5 w2 } }) -}
0a96f82d69bab9b542720246816b866c
  $fShowPalaficoState :: GHC.Show.Show Perudo.Types.PalaficoState
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Perudo.Types.PalaficoState
                  Perudo.Types.$fShowPalaficoState_$cshowsPrec
                  Perudo.Types.$fShowPalaficoState_$cshow
                  Perudo.Types.$fShowPalaficoState_$cshowList -}
0a96f82d69bab9b542720246816b866c
  $fShowPalaficoState1 ::
    Perudo.Types.PalaficoState -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Perudo.Types.PalaficoState) (eta :: GHC.Base.String) ->
                 case ds of wild {
                   Perudo.Types.PalificoDone
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           Perudo.Types.$fShowInRoundPlayer7)
                        eta
                   Perudo.Types.PalificoPending
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           Perudo.Types.$fShowInRoundPlayer6)
                        eta }) -}
0a96f82d69bab9b542720246816b866c
  $fShowPalaficoState_$cshow ::
    Perudo.Types.PalaficoState -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Perudo.Types.PalaficoState) ->
                 case x of wild {
                   Perudo.Types.PalificoDone -> Perudo.Types.$fShowInRoundPlayer7
                   Perudo.Types.PalificoPending
                   -> Perudo.Types.$fShowInRoundPlayer6 }) -}
0a96f82d69bab9b542720246816b866c
  $fShowPalaficoState_$cshowList ::
    [Perudo.Types.PalaficoState] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Perudo.Types.PalaficoState
                   Perudo.Types.$fShowPalaficoState1) -}
0a96f82d69bab9b542720246816b866c
  $fShowPalaficoState_$cshowsPrec ::
    GHC.Types.Int -> Perudo.Types.PalaficoState -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (ds1 :: Perudo.Types.PalaficoState)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild {
                   Perudo.Types.PalificoDone
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           Perudo.Types.$fShowInRoundPlayer7)
                        eta
                   Perudo.Types.PalificoPending
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           Perudo.Types.$fShowInRoundPlayer6)
                        eta }) -}
e670ff9958370a4d8d66b7392ba68861
  $fShowPlayer :: GHC.Show.Show Perudo.Types.Player
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Perudo.Types.Player
                  Perudo.Types.$fShowPlayer_$cshowsPrec
                  Perudo.Types.$fShowPlayer_$cshow
                  Perudo.Types.$fShowPlayer_$cshowList -}
e670ff9958370a4d8d66b7392ba68861
  $fShowPlayer_$cshow :: Perudo.Types.Player -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(A,1*U(U),1*U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Perudo.Types.Player) ->
                 case w of ww { Perudo.Types.Player ww1 ww2 ww3 ->
                 Perudo.Types.$w$cshow ww2 ww3 }) -}
e670ff9958370a4d8d66b7392ba68861
  $fShowPlayer_$cshowList :: [Perudo.Types.Player] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Perudo.Types.Player]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Perudo.Types.Player
                   (Perudo.Types.$fShowPlayer_$cshowsPrec GHC.Show.shows22)
                   ls
                   s) -}
e670ff9958370a4d8d66b7392ba68861
  $fShowPlayer_$cshowsPrec ::
    GHC.Types.Int -> Perudo.Types.Player -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U(A,1*U(U),1*U)><L,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Perudo.Types.Player)
                   (w2 :: GHC.Base.String) ->
                 case w1 of ww { Perudo.Types.Player ww1 ww2 ww3 ->
                 Perudo.Types.$w$cshowsPrec2 ww2 ww3 w2 }) -}
fcb73a5215566009da2e204a080d06bf
  $s$dmshowList1 ::
    Perudo.Types.Player -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2,
     Unfolding: (\ (w :: Perudo.Types.Player)
                   (w1 :: GHC.Base.String)[OneShot] ->
                 case w of ww { Perudo.Types.Player ww1 ww2 ww3 ->
                 Perudo.Types.$w$cshowsPrec2 ww2 ww3 w1 }) -}
240bfe5d139f63815ad52ab219817891
  $tc'Bet :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10198784952050209990##
                   14152236182223343381##
                   Perudo.Types.$trModule
                   Perudo.Types.$tc'Bet1) -}
b7fe159dfa4de1ed7e987585b6c8a7e7
  $tc'Bet1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Bet"#) -}
21a86be1d05a0e1753a15191a6ce4ae4
  $tc'Call :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10677628377440962366##
                   10176150022251136014##
                   Perudo.Types.$trModule
                   Perudo.Types.$tc'Call1) -}
ea077b674c718adca880e264e71441f9
  $tc'Call1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Call"#) -}
d316e150d49487aaca9e4d5eef98ee52
  $tc'Five :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13637973937635477546##
                   2092906239236171151##
                   Perudo.Types.$trModule
                   Perudo.Types.$tc'Five1) -}
21db2d6286074b03d415cc7961c1fbbe
  $tc'Five1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Five"#) -}
f7182d51cb5aa0be4795ea9e165df8a1
  $tc'Four :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8844017752751788514##
                   5262507807926687355##
                   Perudo.Types.$trModule
                   Perudo.Types.$tc'Four1) -}
05ab106690b5d24764747983cc6a03e0
  $tc'Four1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Four"#) -}
a310bb3cfff02185d69514914426d4b4
  $tc'InRoundPlayer :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7512218403196683578##
                   13085219726675698644##
                   Perudo.Types.$trModule
                   Perudo.Types.$tc'InRoundPlayer1) -}
5d095da15b11065140b09cb6f248d169
  $tc'InRoundPlayer1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'InRoundPlayer"#) -}
58f6f5c80bb2753de5d7c9cd9c0d0eb7
  $tc'One :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6163029826856930698##
                   5029088451576047824##
                   Perudo.Types.$trModule
                   Perudo.Types.$tc'One1) -}
812bcc4d42eb11a1cb86496ee97bbf4e
  $tc'One1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'One"#) -}
0b3612f3adf29e03de1a68c8ce4ff369
  $tc'PalificoDone :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3770397917349372423##
                   17088547374809628941##
                   Perudo.Types.$trModule
                   Perudo.Types.$tc'PalificoDone1) -}
eb6b22df578c96c44e16f83265d041dc
  $tc'PalificoDone1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'PalificoDone"#) -}
ffed67be52a4f50445d46ba61f42161c
  $tc'PalificoPending :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16399612253844713372##
                   5614189882179540199##
                   Perudo.Types.$trModule
                   Perudo.Types.$tc'PalificoPending1) -}
ab6bd4c3469d15d0c986b1e7e26937f5
  $tc'PalificoPending1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'PalificoPending"#) -}
2f2c98011648fcd56036ad5a3621276b
  $tc'Player :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8880604053575219049##
                   2359371709393057776##
                   Perudo.Types.$trModule
                   Perudo.Types.$tc'Player1) -}
b4e018269b3968ee42b2706d8e09753b
  $tc'Player1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Player"#) -}
6e708fb24a477c9bd99e3c6d3a31e1de
  $tc'Six :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14856772978180275875##
                   18077237708899365244##
                   Perudo.Types.$trModule
                   Perudo.Types.$tc'Six1) -}
3e15d0ecddac7c9347b7fe08af3bb8ba
  $tc'Six1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Six"#) -}
e78b5ee083a883c274eda55d94f1364e
  $tc'Three :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   928746995058237130##
                   11774859122497944547##
                   Perudo.Types.$trModule
                   Perudo.Types.$tc'Three1) -}
f76b8786d60060a679fcf9e6804d57b3
  $tc'Three1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Three"#) -}
f30db9b02c27bf364695b77efd1b6145
  $tc'Two :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4373456917823617079##
                   13169530080377312072##
                   Perudo.Types.$trModule
                   Perudo.Types.$tc'Two1) -}
50309a3b47286c9163430d1beaa1aaa3
  $tc'Two1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Two"#) -}
b67c158ae0703466a88f44d3dbf0fa72
  $tcAction :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7890946467211999042##
                   10901537930137707087##
                   Perudo.Types.$trModule
                   Perudo.Types.$tcAction1) -}
9fcdf873c0b100026838c7c4d20b0b1a
  $tcAction1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Action"#) -}
26da8b3a939f72e61babc3eb6ba9c9ee
  $tcDice :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4386318371575368139##
                   15500814800654604294##
                   Perudo.Types.$trModule
                   Perudo.Types.$tcDice1) -}
597387031078ae1693ca2a8c4f10459e
  $tcDice1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Dice"#) -}
11e060d5b374c75c670b62f081f8ecd7
  $tcInRoundPlayer :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3753035553798584164##
                   14215080651507986152##
                   Perudo.Types.$trModule
                   Perudo.Types.$tcInRoundPlayer1) -}
3d69f326b16db3b783117d2aa29dde1a
  $tcInRoundPlayer1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "InRoundPlayer"#) -}
95918668574e0edad6ebd0526df2968f
  $tcPalaficoState :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1792470357713594752##
                   16660294109430012752##
                   Perudo.Types.$trModule
                   Perudo.Types.$tcPalaficoState1) -}
44cc9d9cdc53ab0f8f6c74b2ece19194
  $tcPalaficoState1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "PalaficoState"#) -}
aef57e9407b9b03d209a34e909598ccc
  $tcPlayer :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17293706231065861689##
                   3276687869398387842##
                   Perudo.Types.$trModule
                   Perudo.Types.$tcPlayer1) -}
c3d657cd4ee2269facd86bdb69341080
  $tcPlayer1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Player"#) -}
04ef07e49c8176e5010c97285a8abd61
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Perudo.Types.$trModule2
                   Perudo.Types.$trModule1) -}
b1ce85972fb52a7eea5aa7b17671c2a4
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Perudo.Types"#) -}
595dea58289fecf796a57a77fd866025
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "perudo-0.1.0.0-HYB7kc5HV0jJRPlvbPRvgE"#) -}
743018a7f29a128d6381e5f2779688a5
  $w$crandomR ::
    System.Random.RandomGen g =>
    Perudo.Types.Dice
    -> Perudo.Types.Dice -> g -> (# Perudo.Types.Dice, g #)
  {- Arity: 4,
     Strictness: <L,U(C(U(1*U(U),U)),C(U(U,U)),A)><S,1*U><S,1*U><L,U>,
     Inline: [0] -}
020f35a8741708c89bb5638de33a2730
  $w$cshow ::
    Perudo.Types.NumberOfDice
    -> Perudo.Types.PalaficoState -> GHC.Base.String
  {- Arity: 2, Strictness: <L,1*U(U)><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Perudo.Types.NumberOfDice)
                   (ww1 :: Perudo.Types.PalaficoState) ->
                 GHC.CString.unpackAppendCString#
                   "<Player (Dice: "#
                   (case ww of ww2 { GHC.Types.I# ww3 ->
                    case GHC.Show.$wshowSignedInt
                           0#
                           ww3
                           (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                    GHC.Base.++
                      @ GHC.Types.Char
                      (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                      (GHC.CString.unpackAppendCString#
                         ") "#
                         (case ww1 of wild {
                            Perudo.Types.PalificoDone -> Perudo.Types.$fShowInRoundPlayer7
                            Perudo.Types.PalificoPending
                            -> Perudo.Types.$fShowInRoundPlayer6 })) } })) -}
743018a7f29a128d6381e5f2779688a5
  $w$cshowsPrec ::
    Perudo.Types.Dice -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (w :: Perudo.Types.Dice) (w1 :: GHC.Base.String) ->
                 case w of wild {
                   Perudo.Types.One
                   -> GHC.Base.++ @ GHC.Types.Char Perudo.Types.$fShowAction8 w1
                   Perudo.Types.Two
                   -> GHC.Base.++ @ GHC.Types.Char Perudo.Types.$fShowAction7 w1
                   Perudo.Types.Three
                   -> GHC.Base.++ @ GHC.Types.Char Perudo.Types.$fShowAction6 w1
                   Perudo.Types.Four
                   -> GHC.Base.++ @ GHC.Types.Char Perudo.Types.$fShowAction5 w1
                   Perudo.Types.Five
                   -> GHC.Base.++ @ GHC.Types.Char Perudo.Types.$fShowAction4 w1
                   Perudo.Types.Six
                   -> GHC.Base.++ @ GHC.Types.Char Perudo.Types.$fShowAction3 w1 }) -}
5766b5ca813364b4cf936184db4c2eca
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> Perudo.Types.Player
    -> Perudo.Types.Hand
    -> Perudo.Types.RoundPosition
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 5,
     Strictness: <S,U><L,1*U(A,1*U(U),1*U)><L,1*U><L,1*U(U)><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Perudo.Types.Player)
                   (ww2 :: Perudo.Types.Hand)
                   (ww3 :: Perudo.Types.RoundPosition)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Perudo.Types.$fShowInRoundPlayer9
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Perudo.Types.$fShowInRoundPlayer8
                          (case ww1 of ww4 { Perudo.Types.Player ww5 ww6 ww7 ->
                           Perudo.Types.$w$cshowsPrec2
                             ww6
                             ww7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Perudo.Types.$fShowInRoundPlayer5
                                (GHC.Base.++
                                   @ GHC.Types.Char
                                   Perudo.Types.$fShowInRoundPlayer4
                                   (let {
                                      s :: GHC.Base.String
                                      = GHC.Base.++
                                          @ GHC.Types.Char
                                          Perudo.Types.$fShowInRoundPlayer5
                                          (GHC.Base.++
                                             @ GHC.Types.Char
                                             Perudo.Types.$fShowInRoundPlayer3
                                             (case ww3 of ww8 { GHC.Types.I# ww9 ->
                                              case GHC.Show.$wshowSignedInt
                                                     0#
                                                     ww9
                                                     (GHC.Base.++
                                                        @ GHC.Types.Char
                                                        Perudo.Types.$fShowInRoundPlayer2
                                                        x) of ww10 { (#,#) ww11 ww12 ->
                                              GHC.Types.: @ GHC.Types.Char ww11 ww12 } }))
                                    } in
                                    case ww2 of wild {
                                      [] -> GHC.CString.unpackAppendCString# "[]"# s
                                      : x1 xs
                                      -> GHC.Types.:
                                           @ GHC.Types.Char
                                           GHC.Show.showList__2
                                           (Perudo.Types.$w$cshowsPrec
                                              x1
                                              (let {
                                                 lvl27 :: [GHC.Types.Char]
                                                 = GHC.Types.:
                                                     @ GHC.Types.Char
                                                     GHC.Show.showList__1
                                                     s
                                               } in
                                               letrec {
                                                 showl :: [Perudo.Types.Dice] -> GHC.Base.String
                                                   {- Arity: 1, Strictness: <S,1*U> -}
                                                 = \ (ds2 :: [Perudo.Types.Dice]) ->
                                                   case ds2 of wild1 {
                                                     [] -> lvl27
                                                     : y ys
                                                     -> GHC.Types.:
                                                          @ GHC.Types.Char
                                                          GHC.Show.shows5
                                                          (Perudo.Types.$w$cshowsPrec
                                                             y
                                                             (showl ys)) }
                                               } in
                                               showl xs)) }))) }))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 w)) }) -}
c679784ed4e5982fb11645890fe11a97
  $w$cshowsPrec2 ::
    Perudo.Types.NumberOfDice
    -> Perudo.Types.PalaficoState
    -> GHC.Base.String
    -> [GHC.Types.Char]
  {- Arity: 3, Strictness: <L,1*U(U)><L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Perudo.Types.NumberOfDice)
                   (ww1 :: Perudo.Types.PalaficoState)
                   (w :: GHC.Base.String) ->
                 GHC.CString.unpackAppendCString#
                   "<Player (Dice: "#
                   (case ww of ww2 { GHC.Types.I# ww3 ->
                    case GHC.Show.$wshowSignedInt
                           0#
                           ww3
                           (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                    GHC.Base.++
                      @ GHC.Types.Char
                      (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                      (GHC.CString.unpackAppendCString#
                         ") "#
                         (case ww1 of wild {
                            Perudo.Types.PalificoDone
                            -> GHC.Base.++ @ GHC.Types.Char Perudo.Types.$fShowInRoundPlayer7 w
                            Perudo.Types.PalificoPending
                            -> GHC.Base.++
                                 @ GHC.Types.Char
                                 Perudo.Types.$fShowInRoundPlayer6
                                 w })) } })) -}
743018a7f29a128d6381e5f2779688a5
  $w$ctoEnum :: GHC.Prim.Int# -> Perudo.Types.Dice
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0#) of wild {
                   GHC.Types.False -> Perudo.Types.$fEnumDice7 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 5#) of wild1 {
                        GHC.Types.False -> Perudo.Types.$fEnumDice7 ww
                        GHC.Types.True
                        -> GHC.Prim.tagToEnum# @ Perudo.Types.Dice ww } }) -}
a27a9b301ae87e90a650314a0d086d2a
  data Action = Call | Bet Perudo.Types.DiceBet
743018a7f29a128d6381e5f2779688a5
  data Dice = One | Two | Three | Four | Five | Six
ae73daee2d8007d83b7578df3904a3df
  type DiceBet = (Perudo.Types.NumberOfDice, Perudo.Types.Dice)
c705e6cdc75f3541f4ab7c7fb096785d
  type Hand = [Perudo.Types.Dice]
18683ae0c86846b26dc299373077d50a
  data InRoundPlayer
    = InRoundPlayer {player :: Perudo.Types.Player,
                     hand :: Perudo.Types.Hand,
                     roundPosition :: Perudo.Types.RoundPosition}
174c62e89df1980ab8c8f36c55802879
  type NumberOfDice = GHC.Types.Int
0a96f82d69bab9b542720246816b866c
  data PalaficoState = PalificoDone | PalificoPending
68a4353f853ff211d14662477399fe3c
  type PerudoResult = GHC.Types.Int
e086a38f4c86c2acee4d18f0ed6148f3
  type PerudoStrategy =
    Perudo.Types.Hand
    -> Perudo.Types.RoundPosition
    -> [Perudo.Types.Action]
    -> Perudo.Types.Action
e670ff9958370a4d8d66b7392ba68861
  data Player
    = Player {strategy :: Perudo.Types.PerudoStrategy,
              numberOfDice :: Perudo.Types.NumberOfDice,
              palifcoState :: Perudo.Types.PalaficoState}
9053250b37d4ee4e48658feb5e6dea00
  type RoundPosition = GHC.Types.Int
d5fac15df248e4dac856b59d88fe7700
  hand :: Perudo.Types.InRoundPlayer -> Perudo.Types.Hand
  RecSel Left Perudo.Types.InRoundPlayer
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Perudo.Types.InRoundPlayer) ->
                 case ds of wild { Perudo.Types.InRoundPlayer ds1 ds2 ds3 ->
                 ds2 }) -}
c46a06d0cae757e656b6c3f72a63dd0b
  numberOfDice :: Perudo.Types.Player -> Perudo.Types.NumberOfDice
  RecSel Left Perudo.Types.Player
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Perudo.Types.Player) ->
                 case ds of wild { Perudo.Types.Player ds1 ds2 ds3 -> ds2 }) -}
d001503135214c6453b40d8bf179dc26
  palifcoState :: Perudo.Types.Player -> Perudo.Types.PalaficoState
  RecSel Left Perudo.Types.Player
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Perudo.Types.Player) ->
                 case ds of wild { Perudo.Types.Player ds1 ds2 ds3 -> ds3 }) -}
f55348cbc2fff079a113c97ddb8cd49b
  player :: Perudo.Types.InRoundPlayer -> Perudo.Types.Player
  RecSel Left Perudo.Types.InRoundPlayer
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U(U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Perudo.Types.InRoundPlayer) ->
                 case ds of wild { Perudo.Types.InRoundPlayer ds1 ds2 ds3 ->
                 ds1 }) -}
3e1b72d93ad3ffd3c1480391eb8f8601
  roundPosition ::
    Perudo.Types.InRoundPlayer -> Perudo.Types.RoundPosition
  RecSel Left Perudo.Types.InRoundPlayer
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Perudo.Types.InRoundPlayer) ->
                 case ds of wild { Perudo.Types.InRoundPlayer ds1 ds2 ds3 ->
                 ds3 }) -}
5c97a27be7d56f26ca560e104eb8757b
  strategy :: Perudo.Types.Player -> Perudo.Types.PerudoStrategy
  RecSel Left Perudo.Types.Player
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Perudo.Types.Player) ->
                 case ds of wild { Perudo.Types.Player ds1 ds2 ds3 -> ds1 }) -}
instance [safe] GHC.Enum.Bounded [Perudo.Types.Dice]
  = Perudo.Types.$fBoundedDice
instance [safe] GHC.Enum.Enum [Perudo.Types.Dice]
  = Perudo.Types.$fEnumDice
instance [safe] GHC.Classes.Eq [Perudo.Types.Action]
  = Perudo.Types.$fEqAction
instance [safe] GHC.Classes.Eq [Perudo.Types.Dice]
  = Perudo.Types.$fEqDice
instance [safe] GHC.Classes.Eq [Perudo.Types.PalaficoState]
  = Perudo.Types.$fEqPalaficoState
instance [safe] System.Random.Random [Perudo.Types.Dice]
  = Perudo.Types.$fRandomDice
instance [safe] GHC.Show.Show [Perudo.Types.Action]
  = Perudo.Types.$fShowAction
instance [safe] GHC.Show.Show [Perudo.Types.Dice]
  = Perudo.Types.$fShowDice
instance [safe] GHC.Show.Show [Perudo.Types.InRoundPlayer]
  = Perudo.Types.$fShowInRoundPlayer
instance [safe] GHC.Show.Show [Perudo.Types.PalaficoState]
  = Perudo.Types.$fShowPalaficoState
instance [safe] GHC.Show.Show [Perudo.Types.Player]
  = Perudo.Types.$fShowPlayer
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

